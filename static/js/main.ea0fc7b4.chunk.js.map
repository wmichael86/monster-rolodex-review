{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,8BAEtB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,YCJKC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,WCHdM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACQZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC+BPG,G,wDAlCb,aAAe,IAAD,8BACZ,gBACOC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJL,E,gEAQO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OACZA,EAASC,UACRF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,+BAInC,IAAD,SAC6BE,KAAKR,MAA/BR,EADH,EACGA,SAAUS,EADb,EACaA,YACZQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYY,wBAElD,OACE,sBAAK7B,UAAU,MAAf,UACA,kDACI,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAkB,GAAM,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUxB,SAAUiB,W,GA7BZQ,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.ea0fc7b4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size = 180x180`}\r\n        />\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n     {props.monsters.map(monster =>(\r\n        <Card key={monster.id} monster ={monster} />\r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n            className='search'\r\n            type='search' \r\n            placeholder={placeholder} \r\n            onChange={handleChange}\r\n            />\r\n              ); ","import React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n      this.state = {\n        monsters: [],\n        searchField: ''\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => \n      response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n\n  render() {\n      const { monsters, searchField } = this.state;\n      const filteredMonsters = monsters.filter(monster =>\n        monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n        )\n      return(\n        <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n            <SearchBox\n              placeholder='search monsters'\n              handleChange={e => {this.setState({searchField: e.target.value})}}\n            /> \n          <CardList monsters={filteredMonsters} />         \n        </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}